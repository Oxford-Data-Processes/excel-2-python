objects:
  excel_raw_file_path:
    type: str
    description: "Path to raw Excel"

  excel_raw:
    type: ExcelFile
    description: "Loaded raw Excel"

  excel_reduced_file_path:
    type: str
    description: "Path to Excel with only two rows per table"

  excel_reduced:
    type: ExcelFile
    description: "Loaded raw Excel file"

  excel_reduced_clean:
    type: ExcelFile
    description: "Excel with only two rows per table with formulas cleaned"

  extracted_tables:
    type: "dict[Worksheet, list[Table]]"
    description: "Located tables inside an Excel with table metadata"

  series_data:
    type: "dict[UUID, list[Series]]"
    description: "Collection of series"

  formula_1:
    type: str
    description: "First Excel formula inside a series"

  formula_2:
    type: str
    description: "Second Excel formula inside a series"

  formula_1_ast:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Represents the starting node of the AST for formula_1, which can be traversed"

  formula_2_ast:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Represents the starting node of the AST for formula_2, which can be traversed"

  formula_1_ast_series:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Represents the starting node of the AST for formula_1, but with SeriesRange objects instead of RangeNode objects"

  formula_2_ast_series:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Represents the starting node of the AST for formula_2, but with SeriesRange objects instead of RangeNode objects"

  ast_generator:
    type: ASTGenerator
    description: "An object with a get_ast() method that returns the ast of the nth index"

  ast_generator_python:
    type: ASTGeneratorPython
    description: "An object with a get_ast_python() method but where the ast output has PythonFunction objects instead of FunctionNode objects."

  ast_generator_collection:
    type: "dict[UUID, ASTGeneratorPython]"
    description: "Dictionary where keys are series_id values and the values are ASTGeneratorPython objects"

  ast:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Output of the get_ast() method from the ASTGenerator class"

  ast_python:
    type: xlcalculator.ast_nodes.ASTNode
    description: "Output of the get_ast_python() method from the ASTGeneratorPython class"

  series_dependencies:
    type: "dict[UUID, list[UUID]]"
    description: "Dictionary where keys are series_ids and the values are the series_ids which are dependencies for each series"

  sorted_dag:
    type: "list[UUID]"
    description: "List of series_ids in order of execution"

  python_pipeline:
    type: str
    description: "Python pipeline code"
